<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kapooo.ssm.mapper.EmployeeMapper">


    <!--查询所有员工信息-->
    <resultMap id="baseResultEmployeeSelectAll" type="cn.kapooo.ssm.domain.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="age" property="age"/>
        <result column="email" property="email"/>

        <association property="department" javaType="cn.kapooo.ssm.domain.Department"
                     column="deptId"
                     select="cn.kapooo.ssm.mapper.DepartmentMapper.selectById"/>
    </resultMap>
    
    <select id="selectAll" resultMap="baseResultEmployeeSelectAll">
        select id, name, username, password, age, email, admin, deptId from employee
    </select>

    <!--保存员工信息-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into employee (name, username, password, age, email, admin, deptId, testNum) values (#{name}, #{username}, #{password}, #{age}, #{email}, #{admin}, #{department.id}, 1)
    </insert>

    <!--保存员工和角色的关系-->
    <insert id="saveRelation">
        insert into employee_role (employee_id, role_id) values
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{employeeId}, #{roleId})
        </foreach>
    </insert>

    <!--修改员工信息-->
    <update id="update">
        update employee set name = #{name}, username = #{username}, password = #{password}, age = #{age}, email = #{email}, admin = #{admin}, deptId = #{department.id}
        where id = #{id}
    </update>

    <!--根据id查找员工信息-->
    <resultMap id="baseResultEmployeeSelectById" type="cn.kapooo.ssm.domain.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="age" property="age"/>
        <result column="email" property="email"/>

        <association property="department" javaType="cn.kapooo.ssm.domain.Department"
                     column="deptId"
                     select="cn.kapooo.ssm.mapper.DepartmentMapper.selectById"/>
    </resultMap>
    <select id="selectById" resultMap="baseResultEmployeeSelectById">
        select id, name, username, password, age, email, admin, deptId, testNum from employee
        where id = #{id}
    </select>

    <!--删除员工信息-->
    <delete id="delete">
        delete from employee
        where id = #{id}
    </delete>

    <!--根据员工id删除员工和角色的关系-->
    <delete id="deleteByEmployeeId">
        delete from employee_role
        where employee_id = #{id}
    </delete>
    <!--查询数据总条数-->
    <select id="selectForCount" resultType="int">
        select count(id) from employee
    </select>

    <!--查询每个分页的数据-->
    <resultMap id="baseResultEmployeeSelectForList" type="cn.kapooo.ssm.domain.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="age" property="age"/>
        <result column="email" property="email"/>

        <association property="department" javaType="cn.kapooo.ssm.domain.Department"
                     column="deptId"
                     select="cn.kapooo.ssm.mapper.DepartmentMapper.selectById"/>
    </resultMap>
    <select id="selectForList" resultMap="baseResultEmployeeSelectForList">
        select id, name, username, password, age, email, admin, deptId, testNum from employee
<!--        limit #{start}, #{pageSize}-->
    </select>

    <!--根据账号查询账号密码登录次数-->
    <select id="selectLoginByUsername" resultType="cn.kapooo.ssm.domain.Employee">
        select id, username, password, admin, testNum from employee
        where username = #{username}
    </select>

    <!--根据员工id修改登录尝试次数-->
    <update id="updateTestNumByEmployeeId">
        update employee set testNum = #{testNum}
        where id = #{id}
    </update>
</mapper>